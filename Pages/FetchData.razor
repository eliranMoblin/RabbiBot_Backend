@page "/fetchdata"
@inject IJSRuntime JsRuntime
@implements IDisposable
@using Common.ExtensionMethods
@using Entity
@using RabbiBot_Backend.Data
@inject ImagesService ImagesService


@if (images == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="row">
        <div class="col">


            <div class="card">
                <div class="card-body">
                    <table class="table table-bordered table-hover" id="My_table">
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>Url</th>
                                <th>Date</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var image in images)
                            {
                                <tr>
                                    <td>@image.Id</td>

                                    <td>@image.Url</td>
                                    <td>@image.CreatedDate.GetRelativeDateText()</td>
                                    <td>
                                        <a class="btn btn-primary" href='/Edit/@image.Id'>Edit</a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

}

@code {

    private List<Images> images;

    protected override async Task OnInitializedAsync()
    {
        images = await ImagesService.GetImages();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await JsRuntime.InvokeAsync<object>("TestDataTablesAdd", "#My_table");
    }


    void IDisposable.Dispose()
    {
        JsRuntime.InvokeAsync<object>("TestDataTablesRemove", "#My_table");
    }

}
