@page "/"
@using Blazor.Extensions
@using RabbiBot_Backend.Data
@inject BrowserService Service
@inject IJSRuntime JsRuntime

<div class="container-fluid">
    


    <p>Window Height: @Height</p>
    <p>Window Width: @Width</p>

    <button @onclick="GetDimensions">Get Dimensions</button>
</div>

@code
{


    public int Height { get; set; }
    public int Width { get; set; }

    async Task GetDimensions()
    {
        var dimension = await Service.GetDimensions();
        Height = dimension.Height;
        Width = dimension.Width;
    }
    //private Canvas2DContext _context;

    protected BECanvasComponent _canvasReference;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JsRuntime.InvokeVoidAsync("addDatePicker");
        }

        //this._context = await this._canvasReference.CreateCanvas2DAsync();
        //await this._context.SetFillStyleAsync("green");

        //await this._context.FillRectAsync(10, 100, 100, 100);

        //await this._context.SetFontAsync("48px serif");
        //await this._context.StrokeTextAsync("Hello Blazor!!!", 10, 100);
    }

    //private string _message = "Select a button to learn its position.";
    //private async Task GetColor(MouseEventArgs e)
    //{
    //    await JsRuntime.InvokeVoidAsync("addDatePicker", e);

    //    var pxlColor = await _context.GetLineDashAsync();
    //    _message = $"You selected Button # at " +
    //               $"mouse position: {e.ClientX} X {e.ClientY}.  event {e} color";
    //}
}
